# encoding:utf-8

import tornado.ioloop
import tornado.web
import tornado.websocket
import tornado.httpserver
import json
from models import *

class MytaHandler(tornado.websocket.WebSocketHandler):
    def check_origin(self, origin):
        return True

    def open(self, params):
        print 'WebSocket open'
        print 'client:', params
        self.write_message(json.dumps('hello'))

	def on_message(self, message):
		msg = json.loads(message)
   		print msg
		def login(name, password):
			error = 2
			if name == '' or password == "":
				error = 1
			cur=conn('myta') #使用mysql中的myta数据库
			cur.execute('select name,tel from myta_info where password='+password)
			objs = cur.fetchall()
			if objs != []:
				for obj in objs:
					if obj[0] == name or obj[1] == name:
					    error = 0
			self.write_message(json.dumps({'error': error}))	
			return 
	#	except ValueError:
	#	    self.write_message(json.dumps('access denied!!!'))
	#	    return
        try:
            method = msg[u'method']
            print method
            if method == 'sign_in':
            	name = msg[u'username']
				password = msg[u'password']
               # login(name, password)
				error = 2
				if name == '' or password == "":
					error = 1
				cur=conn('myta') #使用mysql中的myta数据库
				cur.execute('select name,tel from myta_info where password='+password)
				objs = cur.fetchall()
				if objs != []:
					for obj in objs:
						if obj[0] == name or obj[1] == name:
							error = 0
				self.write_message(json.dumps({'error': error}))	
            elif method == '':
                pass
        except KeyError:
            self.write_message(json.dumps('access2 denied!!!'))
            return
    def on_close(self):
        print 'WebSocket close'


application = tornado.web.Application([
    (r"/(.*)", MytaHandler),
])

# 页面之间的跳转，服务器并不考虑，针对对应的页面，由客户端发送对应的url请求即可

if __name__ == "__main__":
    http_server = tornado.httpserver.HTTPServer(application)
    http_server.listen(8000)
    tornado.ioloop.IOLoop.instance().start()


